{"version":3,"sources":["components/PosterList.js","components/Header.js","actions/movie.js","actions/types.js","components/HeaderImg.js","components/Searchbar.js","config.js","components/Poster.js","components/LoadButton.js","components/Spinner.js","components/Container.js","components/Stars.js","components/ActorList.js","components/Actor.js","utils/helpers.js","components/HeaderDetails.js","components/VideoPlayer.js","components/MvPlayerList.js","components/MvPlayerListItem.js","routes/Home.js","routes/Details.js","routes/NotFound.js","routes/MoviePlayer.js","reducers/movies.js","reducers/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["wish","HeaderComponent","this","props","getNumber","className","to","pathname","name","size","badge","Component","Header","connect","state","movies","number","dispatch","JSON","parse","localStorage","getItem","type","payload","length","HeaderImg","src","imgScr","alt","title","overview","Searchbar","value","handleChange","e","setState","target","placeholder","onChange","onClick","onSearchClick","API_URL","IMAGE_BASE_URL","API_KEY","PosterList","renderPoster","map","movie","imgSrc","poster_path","localMovies","forEach","localMovie","id","key","wished","mTitle","mDesc","PosterComponent","hover","showOverlay","hideOverlay","remove","console","log","removeM","add","addM","onMouseEnter","onMouseLeave","Poster","push","setItem","stringify","addMovie","movieId","filter","removeMovie","LoadButton","loading","onButtonClick","library","faSpinner","Spinner","icon","pulse","Container","iconName","content","Stars","fakeArray1","element","i","fakeArray2","ActorList","actors","actor","profile_path","Actor","split","calcTime","time","hours","Math","floor","mins","HeaderDetails","calcVote","vote","round","reste","money","status","runtime","revenue","Intl","NumberFormat","style","currency","minimumFractionDigits","format","VideoPlayer","handleEnded","url","controls","playing","width","height","position","top","left","light","onEnded","MvPlayerList","renderList","active","selectedMovie","MvPlayerListItem","activeClass","textDecoration","color","duration","HomeComponent","getMovies","image","Home","Details","loadInfos","axios","get","match","params","data","vote_average","a","cast","NotFound","newMovies","MoviePlayer","imageUrl","videoUrl","getSelectedMovie","_","find","parseInt","getTime","Promise","resolve","reject","then","catch","getNewMovies","oldMovies","promises","all","results","oldMovie","index","backdrop_path","history","initialState","rootReducer","combineReducers","action","enhancers","compose","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","App","activePage","totalPages","searchText","loadMovies","page","searchMovie","handleSearch","total_pages","loadMore","basename","path","exact","render","component","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2193dd03.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config'\nimport { Poster } from './index'\n\nimport '../css/PosterList.css'\n\nlet wish;\n\nclass PosterList extends Component {\n    renderPoster = () => {\n        return this.props.movies.map(movie => {\n            const imgSrc = `${IMAGE_BASE_URL}/${POSTER_SIZE}/${movie.poster_path}`;\n            wish = false;\n            if(this.props.localMovies) {\n                this.props.localMovies.forEach(localMovie => {\n                    if(movie.id === localMovie.id) {\n                        wish = true\n                    }\n                })\n            }\n            return (\n                <Poster\n                key={movie.id}\n                imgSrc={imgSrc}\n                wished={wish}\n                movie={movie}\n                mTitle={movie.title}\n                mDesc={movie.overview}\n                id={movie.id}\n                />\n            )\n        })\n    }\n    render() {\n        return (\n            <div className=\"posterList\">\n                <h3 className=\"posterList--title\">NOUVEAUX FILMS</h3>\n                <div className=\"posterList--grid\">\n                    {this.renderPoster()}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport { PosterList };","import React, { Component } from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getNumber } from '../actions/movie'\n\nimport '../css/Header.css';\n\nclass HeaderComponent extends Component {\n    componentDidMount() {\n        this.props.getNumber();\n    }\n    render () {\n        return (\n            <div className=\"header\">\n                <Link to={{ pathname: \"/\" }}>\n                <FontAwesome className=\"header--movie\" name=\"film\" size=\"5x\" />\n                </Link>\n                <h3>ADFLIX</h3>\n                <Link to={{ pathname: '/player' }}>\n                    <FontAwesome className=\"header--heart\" name=\"heart\" size=\"5x\" />\n                </Link>\n                <div className=\"header--badge\">{this.props.badge}</div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        badge: state.movies.number\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getNumber: () => dispatch(getNumber())\n    }\n}\n\nconst Header = connect(mapStateToProps, mapDispatchToProps)(HeaderComponent);\n\n\nexport { Header };\n","import { ADD_MOVIE, REMOVE_MOVIE, GET_MOVIES, GET_NUMBER } from './index'\n\nexport const addMovie = movie => {\n    let movies = JSON.parse(localStorage.getItem(\"movies\"));\n    if(movies) {\n        movies = [...movies, movie];\n    } else {\n        movies = [];\n        movies.push(movie);\n    }\n    localStorage.setItem(\"movies\", JSON.stringify(movies));\n    return {\n        type: ADD_MOVIE,\n        payload: movies\n    }\n}\n\nexport const removeMovie = movieId => {\n    const oldMovies = JSON.parse(localStorage.getItem('movies'));\n    const movies = oldMovies.filter(movie => movie.id !== movieId);\n    localStorage.setItem('movies', JSON.stringify(movies));\n    return {\n        type: REMOVE_MOVIE,\n        payload: movies\n    }\n}\n\nexport const getMovies = () => {\n    const movies = JSON.parse(localStorage.getItem(\"movies\"));\n    return {\n        type: GET_MOVIES,\n        payload: movies\n    }\n}\n\nexport const getNumber = () => {\n    const movies = JSON.parse(localStorage.getItem(\"movies\"));\n    let number;\n    if(movies) {\n        number = movies.length;\n    } else {\n        number = 0;\n    }\n    return {\n        type: GET_NUMBER,\n        payload: number\n    }\n}","\nconst ADD_MOVIE = \"ADD_MOVIE\";\nconst REMOVE_MOVIE = \"REMOVE_MOVIE\";\nconst GET_MOVIES = \"GET_MOVIES\";\nconst GET_NUMBER = \"GET_NUMBER\";\n\nexport { ADD_MOVIE, REMOVE_MOVIE, GET_MOVIES, GET_NUMBER };","import React, { Component } from \"react\";\n\nimport \"../css/HeaderImg.css\";\n\nclass HeaderImg extends Component {\n  render() {\n    return (\n      <div className=\"headerImg\">\n        <img src={this.props.imgScr} alt=\"\" />\n        <div className=\"headerImg--overlay\">\n          <h3 className=\"headerImg--overlay__title\">{this.props.title}</h3>\n          <p className=\"headerImg--overlay__desc\">{this.props.overview}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { HeaderImg };\n","import React, { Component } from 'react'\nimport FontAwesome from 'react-fontawesome'\n\nimport '../css/SearchBar.css'\n\nclass Searchbar extends Component {\n    state = {\n        value: \"\"\n    }\n    handleChange = e => {\n        this.setState({ value: e.target.value});\n    }\n    render() {\n        const { value } = this.state;\n        return (\n            <div className=\"searchBar--container\">\n                <div className=\"searchBar\">\n                    <input \n                    type=\"text\" \n                    className=\"searchBar--input\" \n                    placeholder=\"Rechercher un film\"\n                    value={value}\n                    onChange={this.handleChange}\n                    />\n                    <div onClick={() => this.props.onSearchClick(value)}>\n                        <FontAwesome className=\"searchIcon\" name=\"search\" />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport { Searchbar };","const API_URL = 'https://api.themoviedb.org/3';\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p';\n\nconst API_KEY = '16f931d6938e74b558cb01e53faf1064';\n\nconst BACKDROP_SIZE ='w1280';\n\nconst POSTER_SIZE =\"w500\";\n\nexport {\n    API_URL,\n    IMAGE_BASE_URL,\n    API_KEY,\n    BACKDROP_SIZE,\n    POSTER_SIZE\n}","import React, { Component } from 'react'\nimport FontAwesome from 'react-fontawesome'\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { addMovie, removeMovie } from '../actions/movie';\n\nimport '../css/Poster.css'\n\n\nclass PosterComponent extends Component {\n    state = {\n        hover: false\n    }\n    showOverlay = () => {\n        if(this.state.hover) {\n            return;\n        }\n        this.setState({ hover: true });\n    }\n    hideOverlay = () => {\n        this.setState({ hover: false });\n    }\n    remove = () => {\n        // a implementer avec redux\n        console.log('remove avec redux');\n        this.props.removeM(this.props.id)\n    }\n    add = () => {\n        // a implementer avec redux\n        console.log('add avec redux');\n        this.props.addM(this.props.movie)\n    }\n    render() {\n        return (\n            <div\n                onMouseEnter={this.showOverlay}\n                onMouseLeave={this.hideOverlay}\n                className=\"poster\"\n             >\n                 <Link to={{ pathname: `/${this.props.id}`}}>\n                    <img src={this.props.imgSrc}\n                        alt=\"poster\"\n                        className=\"poster--img\"\n                    />\n                 </Link>\n                {this.state.hover ? \n                (\n                    <div className=\"poster--overlay\">\n                        <h3 className=\"poster--overlay__text\">LISTE DE SOUHAITS</h3>\n                        {this.props.wished ?\n                        (\n                            <FontAwesome onClick={this.remove} className=\"poster--icon\" name=\"heart\" size=\"3x\" />\n                        ): \n                        (\n                            <FontAwesome onClick={this.add} className=\"poster--icon__not\" name=\"heart-o\" size=\"3x\" />\n                        )}\n                    </div>\n                ): null}\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addM : movie => dispatch(addMovie(movie)),\n        removeM : movieId => dispatch(removeMovie(movieId))\n    }\n}\n\nconst Poster = connect(null, mapDispatchToProps)(PosterComponent);\n\nexport { Poster };","import React, { Component } from 'react'\nimport { Spinner } from './index'\nimport '../css/LoadButton.css'\n\n\n\nclass LoadButton extends Component {\n    render() {\n        return (\n            <>\n            {this.props.loading ? \n            (\n                <Spinner />\n            ):\n            (\n                <div onClick={this.props.onButtonClick} className=\"loadButton\">\n                <h3 className=\"loadButton-text\">VOIR PLUS</h3>\n                </div>\n            )\n            }\n            </>\n        )\n    }\n}\n\nexport { LoadButton };","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpinner} from '@fortawesome/free-solid-svg-icons'\nimport { library } from '@fortawesome/fontawesome-svg-core'\n\nlibrary.add(faSpinner);\n\nconst Spinner = props => {\n    return (\n        <FontAwesomeIcon\n            icon=\"spinner\"\n            pulse\n            size=\"7x\"\n            className=\"fa-faSpinner\"\n        />\n    )\n}\n\nexport { Spinner };","import React from 'react'\nimport FontAwesome from 'react-fontawesome'\n\nimport '../css/Container.css'\n\nconst Container = props => (\n    <div className=\"container\">\n        <FontAwesome name={props.iconName} size='5x' />\n        <h3 className=\"container--title\">{props.content}</h3>\n    </div>\n)\n\nexport { Container }","import React from 'react'\nimport FontAwesome from 'react-fontawesome'\n\nimport '../css/stars.css'\n\nconst Stars = props => {\n    const renderStars1 = () => {\n        return props.fakeArray1.map((element, i) => {\n            return (\n                <FontAwesome\n                key={i}\n                className='stars'\n                name='star'\n                size='3x'\n                />\n            )\n        })\n    }\n    const renderStars2 = () => {\n        return props.fakeArray2.map((element, i) => {\n            return (\n                <FontAwesome\n                key={i}\n                className='stars'\n                name='star-o'\n                size='3x'\n                />\n            )\n        })\n    }\n    return (\n        <div className=\"stars\">\n            {renderStars1()}\n            {renderStars2()}\n        </div>\n    )\n}\n\nexport { Stars }","import React from 'react'\n\nimport { Actor } from './index'\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config'\nimport '../css/ActorList.css'\n\nconst ActorList = props => {\n    const renderActor = () => {\n        return props.actors.map((actor, i) => {\n            const imgSrc = `${IMAGE_BASE_URL}/${POSTER_SIZE}/${actor.profile_path}`;\n            return (\n                <Actor \n                key={i}\n                imgSrc={imgSrc}\n                name={actor.name}\n                hover={false}\n                />\n            )\n        })\n    }\n    return (\n        <div className=\"actorList\"> \n            <h3 className=\"actorList--title\"> ACTEURS </h3>\n            <div className=\"actorList--grid\">{renderActor()}</div>\n        </div>\n    )\n}\n\nexport { ActorList }","import React, { Component } from 'react'\n\nimport '../css/Actor.css'\n\nclass Actor extends Component {\n    state = {\n        hover: false\n    }\n    showOverlay = () => {\n        if(this.state.hover) {\n            return;\n        }\n        this.setState({ hover: true });\n    }\n    hideOverlay = () => {\n        this.setState({ hover: false });\n    }\n    render() {\n        const name = this.props.name.split(' ');\n        return (\n            <div \n            className=\"actor\" \n            onMouseEnter={this.showOverlay}\n            onMouseLeave={this.hideOverlay}\n            >\n                <img src={this.props.imgSrc} alt=\"actor\" className=\"actor--img\" />\n                {this.state.hover ?\n                (\n                    <div className=\"actor--overlay\">\n                        <h3 className=\"actor--name\">{name[0]}</h3>\n                        <h3 className=\"actor--name\">{name[1]}</h3>\n                    </div>\n                ): null    \n            }\n            </div>\n        )\n    }\n}\n\nexport { Actor }","export const calcTime = time => {\n    const hours = Math.floor(time / 60);\n    const mins = time % 60;\n    return `${hours}h ${mins}m`;\n};\n\nexport const convertMoney = money => {\n    var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0\n    });\n    return formatter.format(money);\n}","import React, { Component } from \"react\";\n\nimport { Container, Stars } from \"./index\";\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\nimport { calcTime, convertMoney } from \"../utils/helpers\";\nimport \"../css/HeaderDetails.css\";\n\nclass HeaderDetails extends Component {\n  calcVote = () => {\n    this.fakeArray1 = [];\n    this.fakeArray2 = [];\n    const vote = Math.round(this.props.vote / 2);\n    const reste = 5 - vote;\n    for (let i = 0; i < vote; i++) {\n      this.fakeArray1.push(\"1\");\n    }\n    if (reste !== 0) {\n      for (let i = 0; i < reste; i++) {\n        this.fakeArray2.push(\"1\");\n      }\n    }\n  };\n  render() {\n    this.calcVote();\n    const imgSrc = `${IMAGE_BASE_URL}/${POSTER_SIZE}/${this.props.imgSrc}`;\n    return (\n      <div className=\"headerDetails\">\n        <div className=\"badge-decoration\">{this.props.status}</div>\n        <div className=\"headerDetails--poster\">\n          <img\n            src={imgSrc}\n            alt=\"poster\"\n            className=\"headerDetails--poster__img\"\n          />\n        </div>\n        <div className=\"headerDetails--container\">\n          <h3 className=\"headerDetails--container__title\">\n            {this.props.mTitle}\n          </h3>\n          <p className=\"headerDetails--container__desc\">{this.props.mDesc}</p>\n          <div className=\"headerDetails--info\">\n            <Container\n              iconName=\"clock\"\n              content={calcTime(this.props.runtime)}\n            />\n            <Stars fakeArray1={this.fakeArray1} fakeArray2={this.fakeArray2} />\n            <Container\n              iconName=\"money\"\n              content={convertMoney(this.props.revenue)}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { HeaderDetails };\n","import React, { Component } from \"react\";\nimport ReactPlayer from \"react-player\";\n\nimport \"../css/VideoPlayer.css\";\n\nclass VideoPlayer extends Component {\n  handleEnded = () => {\n    console.log(\"video ended\");\n  };\n  render() {\n    const videoUrl =\n      \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\";\n    const imageSrc = \"./images/Fast_Large.jpg\";\n    return (\n      <div className=\"videoPlayer\">\n        <ReactPlayer\n          url={videoUrl}\n          controls\n          playing={false}\n          width=\"100%\"\n          height=\"100%\"\n          style={{ position: \"absolute\", top: \"0\", left: \"0\" }}\n          light={imageSrc}\n          onEnded={this.props.handleEnded}\n        />\n      </div>\n    );\n  }\n}\n\nexport { VideoPlayer };\n","import React, { Component } from 'react'\n\nimport { MvPlayerListItem } from './index'\n\nimport '../css/MvPlayerList.css'\n\nclass MvPlayerList extends Component {\n    renderList = props => {\n        return props.movies.map((movie, i) => {\n            const active = movie.id === props.selectedMovie.id ? true: false;\n            return (\n                <MvPlayerListItem\n                {...movie}\n                key={movie.id}\n                number={i + 1}\n                active={active}\n                />\n            )\n        })\n    }\n    render() {\n        const position = \"1\";\n        const total = \"10\";\n        return (\n            <div className=\"mvPlayerList\">\n                <div className=\"mvPlayerList--header\">\n                    <h3>{this.props.selectedMovie.title}</h3>\n                <div className=\"mvPlayerList--badge\">{position}/{total}</div>\n                </div>\n                <div className=\"mvPlayerList--list\">{this.renderList(this.props)}</div>\n            </div>\n        )\n    }\n}\n\nexport { MvPlayerList }","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../css/MvPlayerListItem.css\";\n\nclass MvPlayerListItem extends Component {\n  render() {\n    const activeClass = this.props.active\n      ? \"mvPlayerListItem active\"\n      : \"mvPlayerListItem\";\n    return (\n      <Link\n        style={{ textDecoration: \"none\", color: \"white\" }}\n        to={{\n          pathname: `/player/${this.props.id}`,\n        }}\n      >\n        <div className={activeClass}>\n          <div className=\"mvPlayerListItem--number\">{this.props.number}</div>\n          <div className=\"mvPlayerListItem--title\">{this.props.title}</div>\n          <div className=\"mvPlayerListItem--time\">{this.props.duration}</div>\n        </div>\n        <div className=\"mvPlayerListItem--divider\" />\n      </Link>\n    );\n  }\n}\n\nexport { MvPlayerListItem };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { HeaderImg, Searchbar, PosterList, LoadButton } from '../components'; \nimport { getMovies } from '../actions/movie';\n\nclass HomeComponent extends Component {\n    componentDidMount() {\n        this.props.getMovies();\n    }\n    render() {\n      const { mTitle, mDesc, image, movies, loading } = this.props\n        return (\n            <div>\n                <HeaderImg \n                title={mTitle}\n                overview={mDesc}\n                imgScr={image}\n                />\n                <Searchbar onSearchClick={this.props.onSearchClick} />\n                <PosterList movies={movies} localMovies={this.props.localMovies} />\n                <LoadButton  onButtonClick={this.props.onButtonClick} loading={loading}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        localMovies: state.movies.movies\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getMovies: () => dispatch(getMovies())\n    }\n}\n\nconst Home = connect(mapStateToProps, mapDispatchToProps)(HomeComponent);\n\nexport { Home };\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { Spinner, HeaderDetails, ActorList } from '../components';\nimport { API_URL, API_KEY } from '../config';\n\n\nclass Details extends Component {\n    state = {\n        loading: true,\n        actors: [\n            {\n                name: \"Julien Kisoni\",\n        \n            },\n            {\n                name: \"Demi Moore\",\n        \n            },\n            {\n                name: \"Kevin Hart\",\n        \n            },\n            {\n                name: \"Chris Rock\",\n        \n            }\n        ],\n        mTitle: \"Batman\",\n        mDesc: \"Voici la description du film batman\",\n        imgSrc: './images/Fast_large.jpg',\n        revenue: \"$15236478\",\n        runtime: \"2h30\",\n        status :\"Released\",\n        vote: ''\n    }\n\n    async componentDidMount() {\n        try {\n            const movieId = this.props.match.params.id;\n            const url = `${API_URL}/movie/${movieId}?api_key=${API_KEY}&language=fr`;\n            const { data : { \n                revenue,\n                runtime,\n                title,\n                overview, \n                status,\n                vote_average,\n                poster_path \n            } \n        } = await this.loadInfos(url);\n        this.setState ({\n            revenue,\n            runtime,\n            mTitle: title,\n            mDesc: overview,\n            status,\n            imgSrc: poster_path,\n            vote: vote_average\n        }, async () => {\n            const url = `${API_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=fr`;\n            const { data : { cast }} = await this.loadInfos(url);\n            this.setState({ actors: [...cast], loading: false });\n        })\n        } catch(e) {\n            console.log('e', e);\n        }\n    }\n\n    loadInfos = url => axios.get(url);\n    render() {\n        const { loading, actors, mTitle, mDesc, imgSrc, revenue, runtime, status, vote } = this.state;\n        return (\n            <div className=\"app\">\n                {loading ?\n                (\n                    <Spinner />\n                ):\n                (\n                    <>\n                    <HeaderDetails\n                    mTitle={mTitle}\n                    mDesc={mDesc}\n                    imgSrc={imgSrc}\n                    runtime={runtime}\n                    revenue={revenue}\n                    status={status}\n                    vote={vote}\n                    />\n                    <ActorList actors={actors} />\n                    </>\n                )}\n            </div>\n        )\n    }\n}\n\nexport { Details };","import React from 'react'\n\nconst NotFound = (props) => (\n    <div>\n        <p>\n            NOT FOUND\n        </p>\n    </div>\n)\n\nexport { NotFound }","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nimport { VideoPlayer, MvPlayerList, Spinner } from \"../components/\";\nimport { API_KEY, API_URL, IMAGE_BASE_URL, BACKDROP_SIZE } from \"../config\";\nimport { calcTime } from \"../utils/helpers\";\n\nimport \"../css/MoviePlayer.css\";\n\nlet newMovies = [];\n\nclass MoviePlayer extends Component {\n  state = {\n    movies: [\n      {\n        duration: \"2h 9m\",\n        id: 429612,\n        imageUrl:\n          \"http://image.tmdb.org/t/p/w1280//5myQbDzw318K9yofUXRJ4UTVgam.jpg\",\n        position: 1,\n        title: \"Spider-Man : Far from home\",\n        videoUrl:\n          \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\",\n      },\n      {\n        duration: \"2h 9m\",\n        id: 429617,\n        imageUrl:\n          \"http://image.tmdb.org/t/p/w1280//5myQbDzw318K9yofUXRJ4UTVgam.jpg\",\n        position: 1,\n        title: \"Spider-Man : Far from home\",\n        videoUrl:\n          \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\",\n      },\n      {\n        duration: \"2h 9m\",\n        id: 429616,\n        imageUrl:\n          \"http://image.tmdb.org/t/p/w1280//5myQbDzw318K9yofUXRJ4UTVgam.jpg\",\n        position: 1,\n        title: \"Spider-Man : Far from home\",\n        videoUrl:\n          \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\",\n      },\n      {\n        duration: \"2h 9m\",\n        id: 429614,\n        imageUrl:\n          \"http://image.tmdb.org/t/p/w1280//5myQbDzw318K9yofUXRJ4UTVgam.jpg\",\n        position: 1,\n        title: \"Spider-Man : Far from home\",\n        videoUrl:\n          \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\",\n      },\n      {\n        duration: \"2h 9m\",\n        id: 429611,\n        imageUrl:\n          \"http://image.tmdb.org/t/p/w1280//5myQbDzw318K9yofUXRJ4UTVgam.jpg\",\n        position: 1,\n        title: \"Spider-Man : Far from home\",\n        videoUrl:\n          \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\",\n      },\n    ],\n    selectedMovie: {\n      duration: \"2h 9m\",\n      id: 429617,\n      imageUrl:\n        \"http://image.tmdb.org/t/p/w1280//5myQbDzw318K9yofUXRJ4UTVgam.jpg\",\n      position: 1,\n      title: \"Spider-Man : Far from home\",\n      videoUrl:\n        \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\",\n    },\n    loading: true,\n  };\n  async componentDidMount() {\n    const oldMovies = JSON.parse(localStorage.getItem(\"movies\"));\n    const results = await this.getNewMovies(oldMovies);\n    newMovies = oldMovies.map((oldMovie, index) => {\n      return {\n        id: oldMovie.id,\n        position: index + 1,\n        title: oldMovie.title,\n        duration: results[index],\n        imageUrl: `${IMAGE_BASE_URL}/${BACKDROP_SIZE}/${oldMovie.backdrop_path}`,\n        videoUrl:\n          \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\",\n      };\n    });\n\n    const id = this.props.match.params.id;\n\n    if (id) {\n      const selectedMovie = this.getSelectedMovie(newMovies, id);\n      this.setState({\n        loading: false,\n        movies: [...newMovies],\n        selectedMovie,\n      });\n    } else {\n      const selectedMovie = newMovies[0];\n      this.setState({\n        loading: false,\n        movies: [...newMovies],\n        selectedMovie,\n      });\n      this.props.history.push({\n        pathname: `/player/${selectedMovie.id}`,\n      });\n    }\n  }\n  getSelectedMovie = (movies, movieId) => {\n    const selectedMovie = _.find(movies, { id: parseInt(movieId, 10) });\n    console.log(selectedMovie);\n    return selectedMovie;\n  };\n  handleEnded = () => {\n    console.log(\"video ended\");\n  };\n  getTime = (movieId) => {\n    return new Promise((resolve, reject) => {\n      const url = `${API_URL}/movie/${movieId}?api_key=${API_KEY}&language=fr`;\n      axios\n        .get(url)\n        .then((data) => {\n          const duration = data.data.runtime;\n          resolve(duration);\n        })\n        .catch((e) => {\n          console.log(\"e\", e);\n          reject(\"error\", e);\n        });\n    });\n  };\n\n  getNewMovies = async (oldMovies) => {\n    let promises = [];\n    for (let i = 0; i < oldMovies; i++) {\n      const element = oldMovies[i];\n      const id = element.id;\n      const time = await this.getTime(id);\n      promises.push(calcTime(time));\n    }\n    return Promise.all(promises);\n  };\n  render() {\n    const { movies, selectedMovie } = this.state;\n    return (\n      <div className=\"moviePlayer\">\n        {this.state.loading ? (\n          <Spinner />\n        ) : (\n          <>\n            <VideoPlayer\n              videoUrl={selectedMovie.videoUrl}\n              imageUrl={selectedMovie.imageUrl}\n              handleEnded={this.handleEnded}\n            />\n            <MvPlayerList movies={movies} selectedMovie={selectedMovie} />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport { MoviePlayer };\n","import { ADD_MOVIE, REMOVE_MOVIE, GET_MOVIES, GET_NUMBER } from '../actions'\n\nconst initialState = {\n    movies: [],\n    number: 0\n}\n\nexport const movieReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_MOVIE: \n            console.log('add movie called', action.payload);\n            return {\n                movies: action.payload,\n                number: action.payload.length\n            }\n        case REMOVE_MOVIE:\n            console.log('remove movie called', action.payload);\n            return {\n                movies: action.payload,\n                number: state.number - 1\n            }\n        case GET_MOVIES:\n            console.log('getmovie called', action.payload);\n            return {\n                ...state,\n                movies: action.payload\n            }\n        case GET_NUMBER:\n            console.log('get number called', action.payload);\n            return {\n                ...state,\n                number: action.payload\n            }\n        default: \n            return state;\n    }\n\n}","import { combineReducers } from 'redux'\n\nimport { movieReducer } from './movies'\n\nconst rootReducer = combineReducers({\n    movies: movieReducer\n})\n\nexport default rootReducer;","import { createStore, compose } from 'redux'\n\nimport rootReducer from '../reducers'\n\nconst enhancers = compose(\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst store = createStore(rootReducer, {}, enhancers);\n\nexport default store;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { Home, Details, NotFound, MoviePlayer } from \"./routes\";\nimport { Header, Spinner } from \"./components\";\nimport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE } from \"./config\";\nimport store from \"./store\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    loading: true,\n    movies: [],\n    badge: 0,\n    image: null,\n    mTitle: \"\",\n    mDesc: \"\",\n    activePage: 0,\n    totalPages: 0,\n    searchText: \"\",\n  };\n  async componentDidMount() {\n    try {\n      const {\n        data: { results, page, total_pages },\n      } = await this.loadMovies();\n      console.log(\"res\", results);\n      this.setState({\n        movies: results,\n        loading: false,\n        activePage: page,\n        totalPages: total_pages,\n        image: `${IMAGE_BASE_URL}/${BACKDROP_SIZE}/${results[0].backdrop_path}`,\n        mTitle: results[0].title,\n        mDesc: results[0].overview,\n      });\n    } catch (e) {\n      console.log(\"e\", e);\n    }\n  }\n  loadMovies = () => {\n    const page = this.state.activePage + 1;\n    const url = `${API_URL}/movie/popular?api_key=${API_KEY}&page=${page}&language=fr`;\n    return axios.get(url);\n  };\n  searchMovie = () => {\n    const url = `${API_URL}/search/movie?api_key=${API_KEY}&query=${this.state.searchText}&language=fr`;\n    return axios.get(url);\n  };\n  handleSearch = (value) => {\n    // lancer la recherche ici\n    try {\n      this.setState(\n        { loading: true, searchText: value, image: null },\n        async () => {\n          const {\n            data: { results, page, total_pages },\n          } = await this.searchMovie();\n          console.log(\"res\", results);\n          this.setState({\n            movies: results,\n            loading: false,\n            activePage: page,\n            totalPages: total_pages,\n            image: `${IMAGE_BASE_URL}/${BACKDROP_SIZE}/${results[0].backdrop_path}`,\n            mTitle: results[0].title,\n            mDesc: results[0].overview,\n          });\n        }\n      );\n    } catch (e) {\n      console.log(\"e\", e);\n    }\n    console.log(\"handleSearch\", value);\n  };\n\n  loadMore = async () => {\n    try {\n      this.setState({ loading: true });\n      const {\n        data: { results, page, total_pages },\n      } = await this.loadMovies();\n      console.log(\"res\", results);\n      this.setState({\n        movies: [...this.state.movies, ...results],\n        loading: false,\n        activePage: page,\n        totalPages: total_pages,\n        image: `${IMAGE_BASE_URL}/${BACKDROP_SIZE}/${results[0].backdrop_path}`,\n        mTitle: results[0].title,\n        mDesc: results[0].overview,\n      });\n    } catch (e) {\n      console.log(\"error load more\", e);\n    }\n    // lancer une requete\n    console.log(\"loadMore\");\n  };\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter basename=\"/lab/adflix\">\n          <div className=\"App\">\n            <Header badge={this.state.badge} />\n            {!this.state.image ? (\n              <Spinner />\n            ) : (\n              <Switch>\n                <Route\n                  path=\"/\"\n                  exact\n                  render={() => (\n                    <Home\n                      {...this.state}\n                      onSearchClick={this.handleSearch}\n                      onButtonClick={this.loadMore}\n                    />\n                  )}\n                />\n                <Route path=\"/player\" exact component={MoviePlayer} />\n                <Route path=\"/player/:id\" exact component={MoviePlayer} />\n                <Route path=\"/:id\" exact component={Details} />\n                <Route component={NotFound} />\n              </Switch>\n            )}\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}